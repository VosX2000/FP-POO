package vista;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import javax.swing.JOptionPane;

/**
 *
 * @author Axel
 */
public class InterCompras extends javax.swing.JInternalFrame {

    /**
     * Creates new form InterProducto
     */
    public InterCompras() {
        initComponents();
        this.setSize(new Dimension(400, 300));
        this.setTitle("Registrar Nueva Compra");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        txt_proveedor = new javax.swing.JTextField();
        txt_cantidad = new javax.swing.JTextField();
        txt_precio = new javax.swing.JTextField();
        jComboBox_iva = new javax.swing.JComboBox<>();
        jButton_registrar = new javax.swing.JButton();
        jButton_cancelar = new javax.swing.JButton();
        jLabel_wallpaper = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Registrar Nueva Compra");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Producto:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 100, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Cantidad:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, 100, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Precio:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 100, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("IVA:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, 100, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Proveedor:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 100, -1));

        txt_nombre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nombreActionPerformed(evt);
            }
        });
        getContentPane().add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, 170, -1));

        txt_proveedor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_proveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_proveedorActionPerformed(evt);
            }
        });
        getContentPane().add(txt_proveedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, 170, -1));

        txt_cantidad.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_cantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cantidadActionPerformed(evt);
            }
        });
        getContentPane().add(txt_cantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 170, -1));

        txt_precio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_precio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_precioActionPerformed(evt);
            }
        });
        getContentPane().add(txt_precio, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 170, -1));

        jComboBox_iva.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBox_iva.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione IVA:", "No grava IVA", "8%", "16%" }));
        getContentPane().add(jComboBox_iva, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, 170, -1));

        jButton_registrar.setBackground(new java.awt.Color(0, 204, 204));
        jButton_registrar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_registrar.setText("Registrar");
        jButton_registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_registrarActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_registrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 200, 95, 30));

        jButton_cancelar.setBackground(new java.awt.Color(0, 204, 204));
        jButton_cancelar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_cancelar.setText("Cancelar");
        jButton_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_cancelarActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_cancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 200, 95, 30));

        jLabel_wallpaper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fondo3.jpg"))); // NOI18N
        getContentPane().add(jLabel_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 390, 270));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nombreActionPerformed

    private void txt_cantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cantidadActionPerformed

    private void txt_precioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_precioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_precioActionPerformed

    private void jButton_registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_registrarActionPerformed
        //Validar y realizar compra
        String nombre = txt_nombre.getText();
        String proveedor = txt_proveedor.getText();
        String cantidadStr = txt_cantidad.getText();
        String precioStr = txt_precio.getText();
        String iva = (String) jComboBox_iva.getSelectedItem();

        //Validar que los campos no estén vacíos
        if (nombre.isEmpty() || proveedor.isEmpty() || cantidadStr.isEmpty() || precioStr.isEmpty() || "Seleccione IVA:".equals(iva)) {
            JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            int cantidad = Integer.parseInt(cantidadStr);
            double precio = Double.parseDouble(precioStr);
            double total = cantidad * precio;

            registrarCompra(nombre, proveedor, cantidad, precio, iva, total);
            registrarProveedor(proveedor);
            registrarProducto(nombre, cantidad, precio);
            JOptionPane.showMessageDialog(this, "Compra registrada exitosamente. Total: " + total);
            txt_nombre.setText("");
            txt_proveedor.setText("");
            txt_cantidad.setText("");
            txt_precio.setText("");
            jComboBox_iva.setSelectedIndex(0);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Cantidad y precio deben ser números válidos", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton_registrarActionPerformed
    private void registrarCompra(String nombre, String proveedor, int cantidad, double precio, String iva, double total) {
        File comprasFile = new File("resources/compras.txt");

        try (BufferedWriter writer = new BufferedWriter(new FileWriter(comprasFile, true))) {
            writer.write("Nombre: " + nombre);
            writer.newLine();
            writer.write("Proveedor: " + proveedor);
            writer.newLine();
            writer.write("Cantidad: " + cantidad);
            writer.newLine();
            writer.write("Precio: " + precio);
            writer.newLine();
            writer.write("IVA: " + iva);
            writer.newLine();
            writer.write("Total: " + total);
            writer.newLine();
            writer.write("--------------------");
            writer.newLine();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void registrarProveedor(String proveedor) {
        File proveedoresFile = new File("resources/proveedores.txt");
        boolean proveedorExistente = false;

        try (BufferedReader reader = new BufferedReader(new FileReader(proveedoresFile))) {
            String currentLine;
            while ((currentLine = reader.readLine()) != null) {
                if (currentLine.startsWith("Proveedor: " + proveedor)) {
                    proveedorExistente = true;
                    break;
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        if (proveedorExistente) {
            JOptionPane.showMessageDialog(this, "El proveedor ya está registrado.", "Aviso", JOptionPane.WARNING_MESSAGE);
        } else {
            try (BufferedWriter writer = new BufferedWriter(new FileWriter(proveedoresFile, true))) {
                writer.write("Proveedor: " + proveedor);
                writer.newLine();
                writer.write("Razón Social: ");
                writer.newLine();
                writer.write("Teléfono: ");
                writer.newLine();
                writer.write("Descripción: ");
                writer.newLine();
                writer.write("------------------------------");
                writer.newLine();
                JOptionPane.showMessageDialog(this, "Proveedor registrado exitosamente.");
            } catch (IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error al guardar el proveedor.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void registrarProducto(String nombre, int cantidad, double precio) {
        File productosFile = new File("resources/productos.txt");
        File tempFile = new File("resources/productos_temp.txt");

        try (BufferedReader reader = new BufferedReader(new FileReader(productosFile)); BufferedWriter writer = new BufferedWriter(new FileWriter(tempFile))) {

            String currentLine;
            boolean productFound = false;

            while ((currentLine = reader.readLine()) != null) {
                if (currentLine.startsWith("Nombre: " + nombre)) {
                    productFound = true;
                    writer.write(currentLine);
                    writer.newLine();

                    // Leer y actualizar la cantidad
                    String cantidadLine = reader.readLine();
                    writer.write(cantidadLine);
                    writer.newLine();
                    int currentCantidad = Integer.parseInt(cantidadLine.split(": ")[1]);
                    int newCantidad = currentCantidad + cantidad;
                    writer.write("Cantidad: " + newCantidad);
                    writer.newLine();

                    // Leer y actualizar el precio
                    String precioLine = reader.readLine();
                    writer.write("Precio: " + precio);
                    writer.newLine();

                    // Leer la descripción existente
                    String descripcionLine = reader.readLine();
                    writer.write(descripcionLine);
                    writer.newLine();

                    // Leer la línea separadora
                    writer.write(reader.readLine());
                    writer.newLine();
                } else {
                    writer.write(currentLine);
                    writer.newLine();
                }
            }

            if (!productFound) {
                writer.write("Nombre: " + nombre);
                writer.newLine();
                writer.write("Cantidad: " + cantidad);
                writer.newLine();
                writer.write("Precio: " + precio);
                writer.newLine();
                writer.write("Descripción: ");
                writer.newLine();
                writer.write("--------------------");
                writer.newLine();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        // Reemplazar el archivo original con el archivo temporal actualizado
        if (productosFile.delete()) {
            tempFile.renameTo(productosFile);
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo actualizar el archivo de productos.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    private void jButton_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_cancelarActionPerformed
        // TODO add your handling code here:
        // Limpiar los campos
        txt_nombre.setText("");
        txt_cantidad.setText("");
        txt_precio.setText("");
        jComboBox_iva.setSelectedIndex(0);
    }//GEN-LAST:event_jButton_cancelarActionPerformed

    private void txt_proveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_proveedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_proveedorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_cancelar;
    private javax.swing.JButton jButton_registrar;
    private javax.swing.JComboBox<String> jComboBox_iva;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel_wallpaper;
    private javax.swing.JTextField txt_cantidad;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_precio;
    private javax.swing.JTextField txt_proveedor;
    // End of variables declaration//GEN-END:variables
}
